version: '3'

services:
  backend:
    build: .
    restart: always
    image: ${BACKEND_IMAGE_NAME}
    container_name: ${BACKEND_CONTAINER_NAME}
    ports:
      - ${BACK_PORT}:${BACKEND_CONTAINER_PORT}
    environment:
      TZ: Asia/Seoul
      NODE_ENV: ${NODE_ENV}
      BACK_PORT: ${BACKEND_CONTAINER_PORT}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_PROMPT: ${GOOGLE_PROMPT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      SERVICE_KEY: ${SERVICE_KEY}
      SLACK_BOT_USER_OAUTH_ACCESS_TOKEN: ${SLACK_BOT_USER_OAUTH_ACCESS_TOKEN}
      SLACK_CHANNEL_JIPHYEONJEON: ${SLACK_CHANNEL_JIPHYEONJEON}
      FRONT_URL: ${FRONT_URL}
    tty: true
    logging:
      driver: awslogs
      options:
        awslogs-group: ${AWS_CLOUDWATCH_LOG_GROUP}
        awslogs-region: ${AWS_CLOUDWATCH_REGION}
        awslogs-stream: ${AWS_CLOUDWATCH_LOG_STREAM_BACKEND}
  backend_dev:
    build: .
    restart: always
    image: ${BACKEND_IMAGE_NAME}
    container_name: ${BACKEND_CONTAINER_NAME}
    ports:
      - ${BACK_PORT}:${BACKEND_CONTAINER_PORT}
    environment:
      TZ: Asia/Seoul
      NODE_ENV: ${NODE_ENV}
      BACK_PORT: ${BACKEND_CONTAINER_PORT}
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_PROMPT: ${GOOGLE_PROMPT}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_REFRESH_EXPIRES_IN: ${JWT_REFRESH_EXPIRES_IN}
      SERVICE_KEY: ${SERVICE_KEY}
      SLACK_BOT_USER_OAUTH_ACCESS_TOKEN: ${SLACK_BOT_USER_OAUTH_ACCESS_TOKEN}
      SLACK_CHANNEL_JIPHYEONJEON: ${SLACK_CHANNEL_JIPHYEONJEON}
      FRONT_URL: ${FRONT_URL}
    tty: true
    logging:
      driver: awslogs
      options:
        awslogs-group: ${AWS_CLOUDWATCH_LOG_GROUP_DEV}
        awslogs-region: ${AWS_CLOUDWATCH_REGION}
        awslogs-stream: ${AWS_CLOUDWATCH_LOG_STREAM_BACKEND}
  test_db:
    image: mysql:latest
    restart: always
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./test/db/initdb:/docker-entrypoint-initdb.d
      - ./test/db/data:/var/lib/mysql
    tty: true